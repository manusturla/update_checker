##########################################################
#
# This is a sample flask.cfg for developing a Flask application
#
##########################################################
import os


# Get the folder of the top-level directory of this project
BASEDIR = os.path.abspath(os.path.dirname(__file__))

# Update later by using a random number generator and moving
# the actual key outside of the source code under version control
SECRET_KEY = 'bad_secret_key'
WTF_CSRF_ENABLED = True
DEBUG = os.getenv('DEBUG') == "True"

# GET environment variables to connect db

# USED ON PRODUCTION
# ELASTIC BEANSTALK auto-generated environment variables
HOST = os.getenv('RDS_HOSTNAME')
USERNAME = os.getenv('RDS_USERNAME')
PASSWORD = os.getenv('RDS_PASSWORD')
DATABASE = os.getenv('RDS_DB_NAME')

# USED ON LOCAL DEVELOPMENT

if not (HOST or USERNAME or PASSWORD or DATABASE):
    HOST = os.getenv('POSTGRES_HOST')
    USERNAME = os.getenv('POSTGRES_USERNAME')
    PASSWORD = os.getenv('POSTGRES_PASSWORD')
    DATABASE = os.getenv('POSTGRES_DATABASE')

# SQLAlchemy
if HOST and USERNAME and PASSWORD and DATABASE:
    PORT = os.getenv('POSTGRES_PORT') or "5432"
    SQLALCHEMY_DATABASE_URI = f'postgresql+psycopg2://{USERNAME}:{PASSWORD}@{HOST}:{PORT}/{DATABASE}'
    DEBUG = DEBUG
else:
    #SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(BASEDIR, 'app.db')
    #print(SQLALCHEMY_DATABASE_URI)
    pass
SQLALCHEMY_TRACK_MODIFICATIONS = False

# Bcrypt algorithm hashing rounds
BCRYPT_LOG_ROUNDS = 15
